name: Download Artifacts CI

on:
  workflow_dispatch:


jobs:
  create-artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up curl tar tools
        run: sudo apt-get install curl tar -y
      - name: Download google crane
        run: |
          curl -L https://github.com/google/go-containerregistry/releases/download/v0.20.6/go-containerregistry_Linux_x86_64.tar.gz -o go-containerregistry_Linux_x86_64.tar.gz
          tar -zxvf go-containerregistry_Linux_x86_64.tar.gz -C /usr/local/bin/
      - name: Download Artifacts
        run: |
          for arch in amd64 arm64; do
            bash scripts/resource_downloader.sh -p "${arch}" -s component
            bash scripts/resource_downloader.sh -p "${arch}" -s image
            kube_versions=($(cat kube-versions|xargs))
            for kube_version in ${kube_versions[@]}; do
              KUBE_VERSION="${kube_version}"
              bash scripts/resource_downloader.sh -p "${arch}" -k "${KUBE_VERSION}" -s kube
              echo "Compress Artifacts"
              tar -czvf /tmp/k8spilot-offline-artifacts_${kube_version}_${arch}.tar.gz artifacts
              find artifacts -name "kube*" -maxdepth 1 ! -name "kube-version"|xargs rm -f
            done
          done
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: k8spilot-offline-artifacts
          path: /tmp/k8spilot-offline-artifacts_*.tar.gz
