---

- name: Wait 10s For Node Join The Cluster
  ansible.builtin.wait_for:
    timeout: 10

- name: Approve Worker Sign Request
  shell: |
    for csr in $(kubectl get csr|grep 'Pending'|awk '{print $1}'); do
      kubectl certificate approve $csr
    done

- name: Wait 10s For Node Ready
  ansible.builtin.wait_for:
    timeout: 10

- name: Taint Control To NoSchedule
  shell: |
    if kubectl get nodes "{{ inventory_hostname }}" >/dev/null 2>&1; then
      kubectl taint nodes "{{ inventory_hostname }}" --overwrite=true node-role.kubernetes.io/master=:NoSchedule
    fi
  when: allow_master_schedule != true

- name: Taint All Nodes To NoSchedule
  ansible.builtin.shell: |
    if kubectl get nodes "{{ item }}" >/dev/null 2>&1; then
      kubectl taint nodes "{{ item }}" --overwrite=true node.cilium.io/agent-not-ready=:NoSchedule
    fi
  loop: "{{ groups['worker'] }}"
  when: cni_povider == 'cilium'

- name: Taint All Nodes To NoSchedule
  ansible.builtin.shell: |
    if kubectl get nodes "{{ item }}" >/dev/null 2>&1; then
      kubectl taint nodes "{{ item }}" --overwrite=true node.k8spilot.io/network-not-ready=:NoSchedule
    fi
  loop: "{{ groups['worker'] }}"
  when: cni_povider == 'calico'

- name: Label Control Plane
  shell: |
    if kubectl get nodes "{{ inventory_hostname }}" >/dev/null 2>&1; then
      kubectl label nodes "{{ inventory_hostname }}" node-role.kubernetes.io/control-plane=
    fi

- name: Install CNI Povider
  ansible.builtin.include_role:
    name: "{{ cni_povider }}"

- name: Copy CoreDNS Image To Remote Host
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/artifacts/images/coredns"
    dest: "/tmp/"
  delegate_to: "{{ item }}"
  loop: "{{ groups['worker'] }}"

- name: Load CoreDNS Images
  ansible.builtin.shell: |
    ls /tmp/coredns/*.tar|xargs -n 1 ctr -n k8s.io i import
  delegate_to: "{{ item }}"
  loop: "{{ groups['worker'] }}"

- name: Copy CoreDNS YML To Control
  ansible.builtin.template:
    src: coredns.yaml
    dest: "{{ kubernetes_home }}/etc/coredns.yml"

- name: Install CoreDNS {{ coredns_version }}
  ansible.builtin.shell: |
    kubectl apply -f {{ kubernetes_home }}/etc/coredns.yml

- name: Install CSI Driver
  ansible.builtin.include_role:
    name: csi
  when: enable_csi_nfs

- name: Install Ingress
  ansible.builtin.include_role:
    name: ingress
  when: enable_ingress and ingress_controller == 'ingress-nginx'