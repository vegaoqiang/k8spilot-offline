---
kind: Service
apiVersion: v1
metadata:
  name: nfs-server
  namespace: kube-system
  labels:
    app: nfs-server
spec:
  type: ClusterIP
  selector:
    app: nfs-server
  ports:
    - name: tcp-2049
      port: 2049
      protocol: TCP
    - name: udp-111
      port: 111
      protocol: UDP
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: nfs-server
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nfs-server
  template:
    metadata:
      name: nfs-server
      labels:
        app: nfs-server
    spec:  
{% if nfs_server_host and nfs_server_host == 'control' %}
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      tolerations:
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
{% endif %}  
      containers:
      - name: nfs-server
        image: quay.io/k8spilot/nfs-server-alpine:v1.0
        env:
          - name: SHARED_DIRECTORY
            value: "/exports"
        volumeMounts:
          - mountPath: /exports
            name: nfs-vol
        securityContext:
          privileged: true
        ports:
          - name: tcp-2049
            containerPort: 2049
            protocol: TCP
          - name: udp-111
            containerPort: 111
            protocol: UDP
        livenessProbe:
          tcpSocket:
            port: 2049
          initialDelaySeconds: 60
          timeoutSeconds: 5
          successThreshold: 1
          periodSeconds: 10
          failureThreshold: 2000
        readinessProbe:
          tcpSocket:
            port: 2049
          initialDelaySeconds: 60
          timeoutSeconds: 5
          successThreshold: 1
          periodSeconds: 10
      volumes:
        - name: nfs-vol
          hostPath:
            path: "{{ nfs_host_path }}"
            type: DirectoryOrCreate
